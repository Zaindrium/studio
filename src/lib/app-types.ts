
// src/lib/app-types.ts
import type { Timestamp } from 'firebase/firestore';

export type PlanId = 'free' | 'starter' | 'growth' | 'enterprise';

// Data displayed ON a staff member's card
export interface StaffCardData {
  name: string;
  title: string;
  companyName?: string; // Company name on the card
  phone?: string;
  email: string;
  website?: string;
  linkedin?: string;
  twitter?: string;
  github?: string;
  address?: string;
  profilePictureUrl?: string; // Can be dataURI or external URL
  cardBackgroundUrl?: string; // Can be dataURI or external URL
  userInfo?: string; // For AI assistant and "About Me" on card
  targetAudience?: string; // For AI assistant
}

export interface CardDesignSettings {
  template: 'classic' | 'modern' | 'minimalist'; // Example templates
  layout: 'image-left' | 'image-right' | 'image-top';
  colorScheme: {
    cardBackground: string;
    textColor: string;
    primaryColor: string;
  };
  qrCodeUrl: string; // Generated based on fingerprintUrl for public card
}

// Represents an Organization/Company in Firebase
export interface CompanyProfile {
  id: string; // companyId
  name: string;
  industry?: string;
  size?: string;
  website?: string;
  address?: string;
  activePlanId: PlanId; // Added to store the current plan
  createdAt: Timestamp | string;
  updatedAt: Timestamp | string;
}

// Represents an Admin User in Firebase
export type AdminRole = 'Owner' | 'Admin' | 'BillingManager';
export type UserStatus = 'Active' | 'Invited' | 'Inactive';

export interface AdminUser {
  id: string; // adminId (usually user.uid)
  companyId: string;
  companyName?: string; // For convenience
  name: string;
  email: string;
  emailVerified?: boolean;
  role: AdminRole;
  status: UserStatus;
  profilePictureUrl?: string;
  lastLoginAt?: Timestamp | string | null; // Allow null
  createdAt: Timestamp | string;
  updatedAt?: Timestamp | string;
}

// Represents a Staff Record in Firebase (managed by Admins, no login access)
export type StaffRole = 'Employee' | 'Manager' | 'Contractor';
export interface StaffRecord {
  id: string; // staffId (auto-generated by Firestore)
  name: string;
  email: string;
  role: StaffRole;
  teamId?: string; // ID of the team they belong to
  status: UserStatus;
  fingerprintUrl: string; // Unique, admin-settable URL slug for the public card
  uniqueNfcIdentifier?: string; // For NFC card hardware
  cardDisplayData: StaffCardData;
  designSettings: CardDesignSettings;
  cardsCreatedCount?: number;
  lastLoginAt?: Timestamp | string | null; // Allow null
  createdAt: Timestamp | string;
  updatedAt?: Timestamp | string;
}

// Represents a Card Template record in Firebase
export interface CardTemplateRecord {
  id: string; // templateId
  name: string;
  description?: string;
  designSettings: CardDesignSettings;
  defaultCardDisplayData: Partial<StaffCardData>;
  isDefaultCompanyTemplate?: boolean;
  createdAt: Timestamp | string;
  updatedAt: Timestamp | string;
}

export interface AccessCode {
    code: string;
    userId: string; // StaffId this code is for
    companyId: string;
    isUsed: boolean;
    expiresAt?: Timestamp | string;
    createdAt: Timestamp | string;
}

export const defaultStaffCardData: StaffCardData = {
  name: '',
  title: '',
  companyName: '',
  phone: '',
  email: '',
  website: '',
  linkedin: '',
  twitter: '',
  github: '',
  address: '',
  profilePictureUrl: '',
  cardBackgroundUrl: '',
  userInfo: '',
  targetAudience: '',
};

export const defaultCardDesignSettings: CardDesignSettings = {
  template: 'classic',
  layout: 'image-left',
  colorScheme: {
    cardBackground: '#FFFFFF',
    textColor: '#333333',
    primaryColor: '#3F51B5',
  },
  qrCodeUrl: '',
};

export interface Team {
  id: string;
  name: string;
  description: string;
  managerId?: string;
  managerName?: string;
  memberCount: number;
  memberUserIds?: string[]; // Added to store member IDs directly on the team
  assignedTemplates?: AssignedTemplate[]; // Placeholder for future template assignment
  teamMetrics?: TeamMetrics; // Placeholder for team-specific aggregated metrics
  defaultTemplateId?: string;
  createdAt?: Timestamp | string;
  updatedAt?: Timestamp | string;
}

export interface AssignedTemplate {
  id: string;
  name: string;
}

export interface TeamMetrics {
  cardsCreated: number;
  averageSharesPerCard: number;
  leadsGenerated: number;
  activeMembers: number;
}

export interface OrganizationUser { // For selecting managers or adding to teams
  id: string;
  name: string;
  email: string;
  role?: StaffRole | AdminRole; // Can be either
}

export interface ContactInfo {
  id: string;
  name: string;
  email: string;
  phone?: string;
  company?: string;
  message?: string;
  submittedFromCardId?: string;
  submittedAt: Timestamp | string;
}
