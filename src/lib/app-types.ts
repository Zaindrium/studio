
// src/lib/app-types.ts
import type { Timestamp } from 'firebase/firestore';

export type PlanId = 'free' | 'starter' | 'growth' | 'enterprise';

// Data displayed ON a staff member's card
export interface StaffCardData {
  name: string;
  title: string;
  companyName?: string; // Company name on the card
  companyLogoUrl?: string; // Company logo on the card
  phone?: string;
  email: string;
  website?: string;
  linkedin?: string;
  twitter?: string;
  github?: string;
  address?: string;
  profilePictureUrl?: string; // Can be dataURI or external URL
  cardBackgroundUrl?: string; // Can be dataURI or external URL
  userInfo?: string; // For AI assistant and "About Me" on card
  targetAudience?: string; // For AI assistant
}

export interface CardDesignSettings {
  template: 'classic' | 'modern' | 'minimalist'; // Example templates
  layout: 'image-left' | 'image-right' | 'image-top';
  colorScheme: {
    cardBackground: string;
    textColor: string;
    primaryColor: string;
  };
  qrCodeUrl: string; // Generated based on fingerprintUrl for public card
}

// Represents an Organization/Company in Firebase
export interface CompanyProfile {
  id: string; // companyId
  name: string;
  logoUrl?: string; // URL for the company logo
  industry?: string;
  size?: string;
  website?: string;
  address?: string;
  activePlanId: PlanId;
  createdAt: Timestamp | string;
  updatedAt: Timestamp | string;
}

// Represents an Admin User in Firebase
export type AdminRole = 'Owner' | 'Admin' | 'BillingManager';
export type UserStatus = 'Active' | 'Invited' | 'Inactive';

export interface AdminUser {
  id: string; // adminId (usually user.uid)
  companyId: string;
  companyName?: string; // For convenience
  name: string;
  email: string;
  emailVerified?: boolean;
  role: AdminRole;
  status: UserStatus;
  profilePictureUrl?: string;
  lastLoginAt?: Timestamp | string | null;
  createdAt: Timestamp | string;
  updatedAt?: Timestamp | string;
}

// Represents a Staff Record in Firebase (managed by Admins, no login access)
export type StaffRole = 'Employee' | 'Manager' | 'Contractor';
export interface StaffRecord {
  id: string; // staffId (auto-generated by Firestore)
  name: string;
  email: string;
  role: StaffRole;
  teamId?: string; // ID of the team they belong to
  status: UserStatus;
  fingerprintUrl: string; // Unique, admin-settable URL slug for the public card
  uniqueNfcIdentifier?: string; // For NFC card hardware
  cardDisplayData: StaffCardData;
  designSettings: CardDesignSettings;
  cardsCreatedCount?: number; // This might be redundant if each staff has one card
  lastLoginAt?: Timestamp | string | null;
  createdAt: Timestamp | string;
  updatedAt?: Timestamp | string;
}

// Represents a Card Template record in Firebase
export interface CardTemplateRecord {
  id: string; // templateId
  name: string;
  description?: string;
  designSettings: CardDesignSettings;
  defaultCardDisplayData: Partial<StaffCardData>;
  isDefaultCompanyTemplate?: boolean;
  createdAt: Timestamp | string;
  updatedAt: Timestamp | string;
}

export interface AccessCode {
    code: string;
    userId: string; // StaffId this code is for
    companyId: string;
    isUsed: boolean;
    expiresAt?: Timestamp | string;
    createdAt: Timestamp | string;
}

export const defaultStaffCardData: StaffCardData = {
  name: '',
  title: '',
  companyName: '',
  companyLogoUrl: '',
  phone: '',
  email: '',
  website: '',
  linkedin: '',
  twitter: '',
  github: '',
  address: '',
  profilePictureUrl: '',
  cardBackgroundUrl: '',
  userInfo: '',
  targetAudience: '',
};

export const defaultCardDesignSettings: CardDesignSettings = {
  template: 'classic',
  layout: 'image-left',
  colorScheme: {
    cardBackground: '#FFFFFF',
    textColor: '#333333',
    primaryColor: '#3F51B5',
  },
  qrCodeUrl: '',
};

export interface Team {
  id: string;
  name: string;
  description: string;
  managerId?: string;
  managerName?: string;
  memberCount: number;
  memberUserIds?: string[];
  assignedTemplates?: AssignedTemplate[];
  teamMetrics?: TeamMetrics;
  defaultTemplateId?: string;
  createdAt?: Timestamp | string;
  updatedAt?: Timestamp | string;
}

export interface AssignedTemplate {
  id: string;
  name: string;
}

export interface TeamMetrics {
  cardsCreated: number;
  averageSharesPerCard: number;
  leadsGenerated: number;
  activeMembers: number;
}

export interface OrganizationUser {
  id: string;
  name: string;
  email: string;
  role?: StaffRole | AdminRole;
}

export interface ContactInfo {
  id: string;
  name: string;
  email: string;
  phone?: string;
  company?: string;
  message?: string;
  submittedFromCardId?: string;
  submittedAt: Timestamp | string;
}

export interface AppPlan {
  id: PlanId;
  name: string;
  price: string; // e.g., "R59" or "Contact Us"
  priceMonthly: number; // Numeric price for calculations or Stripe, -1 for "Contact Us"
  currencySymbol: string; // e.g., "R", "$"
  frequency: string; // e.g., "/ month"
  staffIncluded: string; // e.g., "1 (Solo)", "Up to 5"
  features: string[];
  extraStaffCost?: string; // e.g., "R39"
  extraStaffUnit?: string; // e.g., "/month each"
  userLimit: number; // Numeric limit for logic (derived from staffIncluded)
  isBusiness: boolean;
  popular?: boolean;
  description?: string; // Short description of the plan
}

export const APP_PLANS: AppPlan[] = [
  {
    id: 'free',
    name: 'Starter',
    price: 'R59',
    priceMonthly: 59,
    currencySymbol: 'R',
    frequency: '/ month',
    staffIncluded: '1 (Solo)',
    features: ['1 Digital card', 'QR/NFC sharing', 'Admin dashboard access', 'Basic templates', 'VCF download'],
    userLimit: 1,
    isBusiness: false, // Typically individual plans are not "business" in terms of team features
    description: "For solopreneurs, freelancers, and micro-businesses needing a professional digital presence.",
  },
  {
    id: 'starter', // Internal ID, maps to "Business Starter"
    name: 'Business Starter',
    price: 'R249',
    priceMonthly: 249,
    currencySymbol: 'R',
    frequency: '/ month',
    staffIncluded: 'Up to 5 Staff',
    features: ['All Starter features', 'Up to 5 unique cards', 'Team grouping', 'Company branding and logo', 'Basic analytics'],
    extraStaffCost: 'R39',
    extraStaffUnit: '/month each',
    userLimit: 5,
    isBusiness: true,
    description: "Designed for small businesses and teams looking to manage multiple digital cards with core branding.",
  },
  {
    id: 'growth',
    name: 'Business Growth',
    price: 'R499',
    priceMonthly: 499,
    currencySymbol: 'R',
    frequency: '/ month',
    staffIncluded: 'Up to 15 Staff',
    features: ['All Business Starter features', 'AI Design Assistant', 'Advanced analytics (engagement, leads)', 'Priority email support'],
    extraStaffCost: 'R35',
    extraStaffUnit: '/month each',
    userLimit: 15,
    isBusiness: true,
    popular: true,
    description: "For growing SMEs or agencies requiring more cards, advanced features, and dedicated support.",
  },
  {
    id: 'enterprise',
    name: 'Enterprise',
    price: 'Custom Quote',
    priceMonthly: -1, // Indicates custom pricing
    currencySymbol: '',
    frequency: '',
    staffIncluded: '20+ Staff',
    features: ['Everything in Growth', 'Unlimited staff (volume pricing)', 'SSO (Single Sign-On)', 'API & integrations', 'Dedicated onboarding & training', 'Service Level Agreement', 'Dedicated account manager', 'Custom features on request'],
    userLimit: Infinity,
    isBusiness: true,
    description: "Tailored solutions for large organizations and corporates with specific needs and high volume usage.",
  },
];
