// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview An AI agent that suggests optimal layouts and color combinations for a digital business card.
 *
 * - suggestDesign - A function that suggests design elements for the card.
 * - SuggestDesignInput - The input type for the suggestDesign function.
 * - SuggestDesignOutput - The return type for the suggestDesign function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestDesignInputSchema = z.object({
  userInfo: z
    .string()
    .describe('Information about the user, including their profession and interests.'),
  targetAudience: z
    .string()
    .describe('The target audience for the business card, including their industry and demographics.'),
});
export type SuggestDesignInput = z.infer<typeof SuggestDesignInputSchema>;

const SuggestDesignOutputSchema = z.object({
  layoutSuggestion: z
    .string()
    .describe('A suggestion for the layout of the digital business card.'),
  colorCombinationSuggestion: z
    .string()
    .describe('A suggestion for the color combination of the digital business card.'),
});
export type SuggestDesignOutput = z.infer<typeof SuggestDesignOutputSchema>;

export async function suggestDesign(input: SuggestDesignInput): Promise<SuggestDesignOutput> {
  return suggestDesignFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestDesignPrompt',
  input: {schema: SuggestDesignInputSchema},
  output: {schema: SuggestDesignOutputSchema},
  prompt: `You are an AI design assistant that specializes in suggesting optimal layouts and color combinations for digital business cards.

  Based on the user's information and their target audience, suggest a layout and a color combination that would be visually appealing and effective.

  User Information: {{{userInfo}}}
  Target Audience: {{{targetAudience}}}

  Layout Suggestion:
  Color Combination Suggestion: `,
});

const suggestDesignFlow = ai.defineFlow(
  {
    name: 'suggestDesignFlow',
    inputSchema: SuggestDesignInputSchema,
    outputSchema: SuggestDesignOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
